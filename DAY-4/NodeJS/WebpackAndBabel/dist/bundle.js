(()=>{"use strict";function t(o){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(o)}function o(o,n){for(var r=0;r<n.length;r++){var e=n[r];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(o,(void 0,i=function(o,n){if("object"!==t(o)||null===o)return o;var r=o[Symbol.toPrimitive];if(void 0!==r){var e=r.call(o,n);if("object"!==t(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(o)}(e.key,"string"),"symbol"===t(i)?i:String(i)),e)}var i}var n=function(){function t(){!function(t,o){if(!(t instanceof o))throw new TypeError("Cannot call a class as a function")}(this,t),this.x=100,this.y=100}var n,r;return n=t,(r=[{key:"printPoint",value:function(){console.log("The point : [X:".concat(this.x,",Y:").concat(this.y,"]"))}}])&&o(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();console.log("The addition is : ".concat(50)),(new n).printPoint()})();